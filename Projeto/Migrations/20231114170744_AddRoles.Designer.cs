// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Models;

#nullable disable

namespace Projeto.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231114170744_AddRoles")]
    partial class AddRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto.Models.AlunoInformacoes", b =>
                {
                    b.Property<int>("Id_aluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_aluno"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_aluno");

                    b.ToTable("alunos");
                });

            modelBuilder.Entity("Projeto.Models.Aulas", b =>
                {
                    b.Property<int>("Id_aulas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_aulas"));

                    b.Property<int?>("CursoId_curso")
                        .HasColumnType("int");

                    b.Property<int>("Id_curso")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_aulas");

                    b.HasIndex("CursoId_curso");

                    b.ToTable("aulas");
                });

            modelBuilder.Entity("Projeto.Models.Categorias", b =>
                {
                    b.Property<int>("Id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_categoria"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_categoria");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("Projeto.Models.CursoCategoria", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("CursoId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("CursoCategorias");
                });

            modelBuilder.Entity("Projeto.Models.Cursos", b =>
                {
                    b.Property<int>("Id_curso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_curso"));

                    b.Property<int?>("CategoriasId_categoria")
                        .HasColumnType("int");

                    b.Property<int>("Data_criacao")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_curso");

                    b.HasIndex("CategoriasId_categoria");

                    b.ToTable("cursos");
                });

            modelBuilder.Entity("Projeto.Models.InstrutorInformacoes", b =>
                {
                    b.Property<Guid>("Id_Instrutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Instrutor");

                    b.ToTable("instrutors");
                });

            modelBuilder.Entity("Projeto.Models.Matricula", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("matriculas");
                });

            modelBuilder.Entity("Projeto.Models.Aulas", b =>
                {
                    b.HasOne("Projeto.Models.Cursos", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId_curso");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Projeto.Models.CursoCategoria", b =>
                {
                    b.HasOne("Projeto.Models.Categorias", "Categorias")
                        .WithMany("CursoCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto.Models.Cursos", "Cursos")
                        .WithMany("CursoCategorias")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Projeto.Models.Cursos", b =>
                {
                    b.HasOne("Projeto.Models.Categorias", null)
                        .WithMany("Cursos")
                        .HasForeignKey("CategoriasId_categoria");
                });

            modelBuilder.Entity("Projeto.Models.Matricula", b =>
                {
                    b.HasOne("Projeto.Models.AlunoInformacoes", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto.Models.Cursos", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Projeto.Models.AlunoInformacoes", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("Projeto.Models.Categorias", b =>
                {
                    b.Navigation("CursoCategorias");

                    b.Navigation("Cursos");
                });

            modelBuilder.Entity("Projeto.Models.Cursos", b =>
                {
                    b.Navigation("CursoCategorias");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
